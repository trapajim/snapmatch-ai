// Code generated by mockery v2.50.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockEntity is an autogenerated mock type for the Entity type
type MockEntity struct {
	mock.Mock
}

type MockEntity_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEntity) EXPECT() *MockEntity_Expecter {
	return &MockEntity_Expecter{mock: &_m.Mock}
}

// GetID provides a mock function with no fields
func (_m *MockEntity) GetID() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetID")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockEntity_GetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetID'
type MockEntity_GetID_Call struct {
	*mock.Call
}

// GetID is a helper method to define mock.On call
func (_e *MockEntity_Expecter) GetID() *MockEntity_GetID_Call {
	return &MockEntity_GetID_Call{Call: _e.mock.On("GetID")}
}

func (_c *MockEntity_GetID_Call) Run(run func()) *MockEntity_GetID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEntity_GetID_Call) Return(_a0 string) *MockEntity_GetID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockEntity_GetID_Call) RunAndReturn(run func() string) *MockEntity_GetID_Call {
	_c.Call.Return(run)
	return _c
}

// SetID provides a mock function with given fields: id
func (_m *MockEntity) SetID(id string) {
	_m.Called(id)
}

// MockEntity_SetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetID'
type MockEntity_SetID_Call struct {
	*mock.Call
}

// SetID is a helper method to define mock.On call
//   - id string
func (_e *MockEntity_Expecter) SetID(id interface{}) *MockEntity_SetID_Call {
	return &MockEntity_SetID_Call{Call: _e.mock.On("SetID", id)}
}

func (_c *MockEntity_SetID_Call) Run(run func(id string)) *MockEntity_SetID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockEntity_SetID_Call) Return() *MockEntity_SetID_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockEntity_SetID_Call) RunAndReturn(run func(string)) *MockEntity_SetID_Call {
	_c.Run(run)
	return _c
}

// NewMockEntity creates a new instance of MockEntity. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockEntity(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockEntity {
	mock := &MockEntity{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
