// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/trapajim/snapmatch-ai/templates/partials"

func Dashboard(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\"><!-- Image Upload Box --><div class=\"bg-white p-4 rounded-lg shadow-md relative\"><h2 class=\"text-lg font-bold mb-4\">Upload Images</h2><form action=\"/assets\" hx-swap=\"none\" method=\"post\" enctype=\"multipart/form-data\" hx-post=\"/assets\" hx-trigger=\"change\" hx-indicator=\"next\" class=\"flex flex-col items-center\"><label for=\"file\" class=\"cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded\">Choose Images</label> <input id=\"file\" name=\"file\" type=\"file\" accept=\"image/*\" class=\"hidden\" multiple></form>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = partials.Indicator().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div><!-- CSV Upload Box --><div class=\"bg-white p-4 rounded-lg shadow-md\"><h2 class=\"text-lg font-bold mb-4\">Upload CSV</h2><div class=\"flex flex-col items-center\"><label for=\"csv-upload\" class=\"cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded\">Choose CSV</label> <input id=\"csv-upload\" type=\"file\" accept=\".csv\" class=\"hidden\"></div></div></div><!-- Static Boxes for Images and Rows --> <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\"><div class=\"bg-white p-4 rounded-lg shadow-md\"><h2 class=\"text-lg font-bold mb-4\">Job Statistics</h2><canvas id=\"statsChart\" width=\"400\" height=\"150\"></canvas></div><div class=\"flex flex-col gap-6 items-stretch\"><div class=\"flex-grow\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = partials.StatsBox("Images Uploaded", "1200", "text-green-600").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div><div class=\"flex-grow\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = partials.StatsBox("Rows Processed", "1200", "text-purple-600").Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</div></div></div><!-- Chart.js Script --> <script>\n        const ctx = document.getElementById('statsChart').getContext('2d');\n        const statsChart = new Chart(ctx, {\n          type: 'bar',\n          data: {\n            labels: ['Active Jobs', 'Failed Jobs'],\n            datasets: [{\n              label: 'Jobs',\n              data: [42, 8], // Replace with dynamic data if needed\n              backgroundColor: [\n                'rgba(54, 162, 235, 0.7)', // Active Jobs\n                'rgba(255, 99, 132, 0.7)'  // Failed Jobs\n              ],\n              borderColor: [\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 99, 132, 1)'\n              ],\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            scales: {\n              y: {\n                beginAtZero: true\n              }\n            }\n          }\n        });\n      </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Page(title).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
