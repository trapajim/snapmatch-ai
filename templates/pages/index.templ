package pages

import (
	"github.com/trapajim/snapmatch-ai/templates/models"
	"github.com/trapajim/snapmatch-ai/templates/partials"
)

templ Dashboard(title string, jobsStats models.BarChart, expiry string) {
	@Page(title, expiry) {
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
			<!-- Image Upload Box -->
			<div class="bg-white p-4 rounded-lg shadow-md relative">
				<h2 class="text-lg font-bold mb-4">Upload Images</h2>
				<form
					action="/assets"
					hx-swap="none"
					method="post"
					enctype="multipart/form-data"
					hx-post="/assets"
					hx-trigger="change"
					hx-indicator="next"
					class="flex flex-col items-center"
				>
					<label
						for="file"
						class="cursor-pointer bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded"
					>
						Choose Images
					</label>
					<input id="file" name="file" type="file" accept="image/*" class="hidden" multiple/>
				</form>
				@partials.Indicator()
			</div>
			<!-- CSV Upload Box -->
			<div class="bg-white p-4 rounded-lg shadow-md">
				<h2 class="text-lg font-bold mb-4">Upload CSV</h2>
				<div class="flex flex-col items-center">
					<form
						action="/data"
						hx-swap="none"
						method="post"
						enctype="multipart/form-data"
						hx-post="/data"
						hx-trigger="change"
						hx-indicator="next"
						class="flex flex-col items-center"
					>
						<label for="csv-upload" class="cursor-pointer bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded">
							Choose CSV
						</label>
						<input id="csv-upload" name="file" type="file" accept=".csv" class="hidden"/>
					</form>
					@partials.Indicator()
				</div>
			</div>
		</div>
		<!-- Static Boxes for Images and Rows -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
			<div class="bg-white p-4 rounded-lg shadow-md">
				<h2 class="text-lg font-bold mb-4">Job Statistics</h2>
				<canvas id="statsChart" width="400" height="150" data-chart={ templ.JSONString(jobsStats) }></canvas>
			</div>
		</div>
		<!-- Chart.js Script -->
		<script>

		const el = document.getElementById('statsChart')
        const ctx = el.getContext('2d');
        const chartsData = JSON.parse(el.getAttribute('data-chart'));
        const statsChart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: chartsData.labels,
            datasets: [{
              data: chartsData.data,
              backgroundColor: chartsData.colors,
              borderWidth: 0
            }]
          },
          options: {
            plugins: {
              legend: {
                display: false
              }
            },
            responsive: true,
            scales: {
              y: {
                beginAtZero: true
              }
            }
          }
        });
      </script>
	}
}
